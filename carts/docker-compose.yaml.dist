version: '3.5'

services:
  ecommerce-ms-carts-service-web:
    container_name: ecommerce-ms-carts-service-web
    build:
      context: ./docker/nginx
      args:
        UID: $U_ID
    ports:
      - 8002:80
    volumes:
      - ./public:/appdata/www/public
    depends_on:
      - ecommerce-ms-carts-service-app
    networks:
      - ecommerce-microservices-network

  ecommerce-ms-carts-service-app:
    container_name: ecommerce-ms-carts-service-app
    build:
      context: docker/php
      args:
        UID: $U_ID
    volumes:
      - ./:/appdata/www
    env_file:
      - .env
    depends_on:
      - ecommerce-ms-carts-service-db
    networks:
      - ecommerce-microservices-network

  ecommerce-ms-carts-service-db:
    container_name: ecommerce-ms-carts-service-db
    build:
      context: ./docker/database
    ports:
      - 10200:3306
    environment:
      MYSQL_DATABASE: carts_database
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ecommerce-ms-carts-service-db-data:/var/lib/mysql
    networks:
      - ecommerce-microservices-network
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]


###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  ecommerce-ms-carts-service-db-data:

networks:
  ecommerce-microservices-network:
    external: true